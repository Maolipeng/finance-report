{"version":3,"sources":["store/action-types.js","store/reducers/test.js","store/reducers/index.js","store/index.js","components/LazySuspenseComponent/index.jsx","router/index.js","App.js","index.js"],"names":["RESET_ACTION","REDUCE_NUMBER","ADD_NUMBER","initState","num","bol","combineReducers","test","state","type","data","types","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","reducer","applyMiddleware","reduxThunk","LazySuspenseComponent","Component","extraProps","props","fallback","Home","lazy","path","exact","component","App","routerConfig","map","route","index","key","ReactDOM","render","document","getElementById"],"mappings":"uGAAA,sGAAO,IAAMA,EAAe,eACfC,EAAgB,gBAChBC,EAAa,c,6OCApBC,EAAY,CAChBC,IAAK,EACLC,KAAK,GCAQC,cAAgB,CAC7BC,KDCa,WAAwC,IAAvCC,EAAsC,uDAA9BL,EAA8B,yCAAjBM,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACzC,OAAQD,GACN,KAAKE,IACH,OAAO,eACFH,EADL,CAEEJ,IAAKI,EAAMJ,IAAMM,IAErB,KAAKC,IACH,OAAO,eACFH,EADL,CAEEJ,IAAKI,EAAMJ,IAAMM,IAErB,KAAKC,IACH,OAAO,eACFH,EADL,CAEEJ,IAAKD,EAAUC,MAEnB,QACE,OAAOI,MEnBPI,EAAmBC,OAAOC,uCAAsC,EAIvDC,EAFDC,YAAYC,GAA8B,IAArBL,EAA6BM,YAAgBC,KAAYP,EAAiBM,YAAgBC,OCE9GC,G,YAPe,SAACC,EAAUC,GAAX,OAA0B,SAAAC,GACtD,OACE,kBAAC,WAAD,CAAUC,SAAU,MAClB,kBAACH,EAAD,iBAAeC,EAAgBC,QCF/BE,EAAOC,gBAAK,kBAAM,iCAGT,GACb,CACEC,KAAM,IACNC,OAAO,EACPC,UAAWT,EANDM,gBAAK,kBAAM,yDAQvB,CACEC,KAAM,QACNC,OAAO,EACPC,UAAWT,EAAsBK,KCetBK,MArBf,WACE,OACE,kBAAC,IAAD,CAAUf,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KAEIgB,EAAaC,KAAK,SAACC,EAAOC,GAAR,OAChB,kBAAC,IAAD,CACEC,IAAKD,EACLP,KAAMM,EAAMN,KACZC,MAAOK,EAAML,MACbC,UAAWI,EAAMJ,mBCdjCO,IAASC,OACP,kBAAC,EAAD,MAIAC,SAASC,eAAe,W","file":"static/js/main.88746625.chunk.js","sourcesContent":["export const RESET_ACTION = 'RESET_ACTION'\nexport const REDUCE_NUMBER = 'REDUCE_NUMBER'\nexport const ADD_NUMBER = 'ADD_NUMBER'\n","import * as types from '../action-types.js'\n\nconst initState = {\n  num: 0,\n  bol: false,\n}\nexport default (state = initState, { type, data }) => {\n  switch (type) {\n    case types.ADD_NUMBER:\n      return {\n        ...state,\n        num: state.num + data,\n      }\n    case types.REDUCE_NUMBER:\n      return {\n        ...state,\n        num: state.num - data,\n      }\n    case types.RESET_ACTION:\n      return {\n        ...state,\n        num: initState.num,\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport test from './test.js'\n\nexport default combineReducers({\n  test,\n})\n","import { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport reducer from './reducers/index.js';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||false;\n\nconst store = createStore(reducer, composeEnhancers === false ? applyMiddleware(reduxThunk):composeEnhancers(applyMiddleware(reduxThunk)));\n\nexport default store;","import React, { Suspense } from 'react';\n\nconst LazySuspenseComponent = (Component,extraProps) => props => {\n  return (\n    <Suspense fallback={null}>\n      <Component {...extraProps} {...props}/>\n    </Suspense>\n  )\n}\nexport default LazySuspenseComponent\n","import { lazy } from 'react'\nimport LazySuspenseComponent from '@/components/LazySuspenseComponent'\n\nconst Home = lazy(() => import('../views/Home'))\nconst Table = lazy(() => import('../views/Table'))\n\nexport default [\n  {\n    path: '/',\n    exact: true,\n    component: LazySuspenseComponent(Table),\n  },\n  {\n    path: '/home',\n    exact: true,\n    component: LazySuspenseComponent(Home),\n  },\n]\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from '../src/store';\nimport '@/normalize.css';\nimport '@/App.css';\nimport routerConfig from '@/router';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          {\n            routerConfig.map( (route, index) => (\n              <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                component={route.component}\n              />\n            ))\n          }\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}